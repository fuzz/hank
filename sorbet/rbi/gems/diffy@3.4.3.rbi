# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `diffy` gem.
# Please instead update this file by running `bin/tapioca gem diffy`.


# source://diffy//lib/diffy.rb#6
module Diffy; end

# source://diffy//lib/diffy/css.rb#2
Diffy::CSS = T.let(T.unsafe(nil), String)

# source://diffy//lib/diffy/css.rb#18
Diffy::CSS_COLORBLIND_1 = T.let(T.unsafe(nil), String)

# source://diffy//lib/diffy/diff.rb#2
class Diffy::Diff
  include ::Enumerable

  # supported options
  # +:diff+::    A cli options string passed to diff
  # +:source+::  Either _strings_ or _files_.  Determines whether string1
  #              and string2 should be interpreted as strings or file paths.
  # +:include_diff_info+::    Include diff header info
  # +:include_plus_and_minus_in_html+::    Show the +, -, ' ' at the
  #                                        beginning of lines in html output.
  #
  # @return [Diff] a new instance of Diff
  #
  # source://diffy//lib/diffy/diff.rb#35
  def initialize(string1, string2, options = T.unsafe(nil)); end

  # source://diffy//lib/diffy/diff.rb#43
  def diff; end

  # source://diffy//lib/diffy/diff.rb#79
  def each; end

  # source://diffy//lib/diffy/diff.rb#102
  def each_chunk; end

  # Returns the value of attribute options.
  #
  # source://diffy//lib/diffy/diff.rb#26
  def options; end

  # Returns the value of attribute string1.
  #
  # source://diffy//lib/diffy/diff.rb#26
  def string1; end

  # Returns the value of attribute string2.
  #
  # source://diffy//lib/diffy/diff.rb#26
  def string2; end

  # source://diffy//lib/diffy/diff.rb#122
  def tempfile(string); end

  # source://diffy//lib/diffy/diff.rb#134
  def to_s(format = T.unsafe(nil)); end

  private

  # source://diffy//lib/diffy/diff.rb#149
  def diff_bin; end

  # options pass to diff program
  #
  # source://diffy//lib/diffy/diff.rb#170
  def diff_options; end

  class << self
    # source://diffy//lib/diffy/diff.rb#14
    def default_format; end

    # Sets the attribute default_format
    #
    # @param value the value to set the attribute default_format to.
    #
    # source://diffy//lib/diffy/diff.rb#13
    def default_format=(_arg0); end

    # source://diffy//lib/diffy/diff.rb#20
    def default_options; end

    # default options passed to new Diff objects
    #
    # source://diffy//lib/diffy/diff.rb#19
    def default_options=(_arg0); end
  end
end

# source://diffy//lib/diffy/diff.rb#3
Diffy::Diff::ORIGINAL_DEFAULT_OPTIONS = T.let(T.unsafe(nil), Hash)

# source://diffy//lib/diffy/format.rb#2
module Diffy::Format
  # ANSI color output suitable for terminal output
  #
  # source://diffy//lib/diffy/format.rb#4
  def color; end

  # Html output which does inline highlighting of changes between two lines.
  #
  # source://diffy//lib/diffy/format.rb#33
  def html; end

  # Basic html output which does not attempt to highlight the changes
  # between lines, and is more performant.
  #
  # source://diffy//lib/diffy/format.rb#28
  def html_simple; end

  # Basic text output
  #
  # source://diffy//lib/diffy/format.rb#22
  def text; end
end

# source://diffy//lib/diffy/html_formatter.rb#2
class Diffy::HtmlFormatter
  # @return [HtmlFormatter] a new instance of HtmlFormatter
  #
  # source://diffy//lib/diffy/html_formatter.rb#4
  def initialize(diff, options = T.unsafe(nil)); end

  # source://diffy//lib/diffy/html_formatter.rb#9
  def to_s; end

  private

  # remove +/- or wrap in html
  #
  # source://diffy//lib/diffy/html_formatter.rb#35
  def clean_line(line); end

  # source://diffy//lib/diffy/html_formatter.rb#124
  def highlight(lines); end

  # source://diffy//lib/diffy/html_formatter.rb#51
  def highlighted_words; end

  # source://diffy//lib/diffy/html_formatter.rb#104
  def reconstruct_characters(line_diff, type); end

  # source://diffy//lib/diffy/html_formatter.rb#91
  def split_characters(chunk); end

  # source://diffy//lib/diffy/html_formatter.rb#18
  def wrap_line(line); end

  # source://diffy//lib/diffy/html_formatter.rb#43
  def wrap_lines(lines); end
end

# source://diffy//lib/diffy/split_diff.rb#2
class Diffy::SplitDiff
  # @return [SplitDiff] a new instance of SplitDiff
  #
  # source://diffy//lib/diffy/split_diff.rb#3
  def initialize(left, right, options = T.unsafe(nil)); end

  # source://diffy//lib/diffy/split_diff.rb#16
  def left; end

  # source://diffy//lib/diffy/split_diff.rb#16
  def right; end

  private

  # source://diffy//lib/diffy/split_diff.rb#23
  def split; end

  # source://diffy//lib/diffy/split_diff.rb#27
  def split_left; end

  # source://diffy//lib/diffy/split_diff.rb#38
  def split_right; end
end

# source://diffy//lib/diffy.rb#7
Diffy::WINDOWS = T.let(T.unsafe(nil), T.untyped)
